type: install
name: Jelasticozor Backend Cluster
baseUrl: https://gitlab.hidora.com/softozor/infrastructure/-/raw/master

settings:
  fields:
    - type: spacer
      caption: Kubernetes Setup
    - name: topo
      type: radio-fieldset
      values:
        0-dev: '<b>Development:</b> one master (1) and one scalable worker (1+)'
        1-prod: '<b>Production:</b> multi master (3) with API balancers (2+) and scalable workers (2+)'
      default: 0-dev
      showIf:
        1-prod:
          - type: spacer
            caption: Mail server
          - name: mailServerHost
            caption: Host
            type: string
            required: true
          - name: mailServerPort
            caption: Port
            type: string
            required: true
          - name: mailServerUsername
            caption: Username
            type: string
            required: true
          - name: mailServerPassword
            caption: Password
            type: string
            inputType: password
            required: true
          - name: mailServerEnableSsl
            caption: Enable SSL
            type: toggle
            value: true
    - name: kubernetesVersion
      type: string
      caption: Kubernetes version
      default: v1.23.6
    - type: spacer
      caption: IAM Service
    - name: kickstartAuth
      type: toggle
      caption: Kickstart Auth
      value: true
      showIf:
        true:
          - name: useJelasticEmailAsAuthAdminEmail
            type: toggle
            caption: Use Jelastic Email
            value: true
            hidden: false
            showIf:
              false:
                name: authAdminEmail
                caption: Admin email
                type: string
                required: true
          - name: hasuraClaimsNamespace
            caption: Hasura Claims Namespace
            type: string
            default: https://hasura.io/jwt/claims
    - name: authIssuer
      caption: JWT issuer
      type: string
      default: your-company.com
    - type: spacer
      caption: Hasura
    - name: useAutoGeneratedHasuraAdminSecret
      type: toggle
      caption: Auto-generate Admin Secret
      value: true
      showIf:
        false:
          name: hasuraAdminSecret
          caption: Admin Secret
          type: string
          inputType: password
          required: true
    - type: spacer
      caption: SSL
    - name: useDefaultExternalDomain
      type: toggle
      caption: Use Default External Domain
      value: true
      hidden: false
      showIf:
        false:
          - name: externalDomains
            caption: External domain names (;-separated list)
            type: string
            vtype: domainlist
            required: true
    
globals:
  # postgres
  HASURA_DB_NAME: hasura
  HASURA_DB_USERNAME: hasura_user
  HASURA_DB_PASSWORD: ${fn.password(40)}
  AUTH_DB_NAME: fusionauth
  AUTH_DB_USERNAME: auth
  AUTH_DB_PASSWORD: ${fn.password(40)}
  # hasura
  HASURA_UNAUTHORIZED_ROLE: anonymous
  HASURA_ADMIN_SECRET_AUTO: ${fn.password(40)}
  HASURA_CLAIMS_NAMESPACE: https://hasura.io/jwt/claims
  # auth
  AUTH_ADMIN_PASSWORD: ${fn.password(40)}
  AUTH_ALMIGHTY_API_KEY: ${fn.password(40)}
  AUTH_SERVERLESS_API_KEY: ${fn.password(40)}
  JWT_KEY_ALGORITHM: RS256

install:
  # TODO: compute optional parameters
  - installCluster
            
# TODO: if dev, deploy mailhog; mailhog needs to be exposed

# TODO: install ssl

actions:
  installCluster:
    jps: https://github.com/jelastic-jps/kubernetes/blob/${settings.kubernetesVersion}/manifest.jps
    envName: ${settings.k8sEnvName}
    displayName: Shopozor Engine
    settings:
      deploy: cmd
      # TODO:
      # 3. install mailhog if dev cluster
      # 4. install fusionauth
      # 6. install hasura graphql-engine
      cmd: |-
        curl -fsSL ${baseUrl}/logs-aggregation/install_graylog.sh | /bin/sh        
        curl -fsSL ${baseUrl}/database/install_db.sh | /bin/sh -s ${baseUrl} ${globals.HASURA_DB_NAME} ${globals.HASURA_DB_USERNAME} ${globals.HASURA_DB_PASSWORD} ${globals.AUTH_DB_NAME} ${globals.AUTH_DB_USERNAME} ${globals.AUTH_DB_PASSWORD}
        curl -fsSL ${baseUrl}/faas/install_faas.sh | /bin/sh
      topo: ${settings.topo}
      dashboard: general
      ingress-controller: Nginx
      storage: true
      api: true
      monitoring: true
      version: ${settings.kubernetesVersion}
      jaeger: false


# TODO: fix this!
# - provide mailhog endpoint
# - provide hasura endpoint
success:
  text: |
    ${globals.MAIL_SERVER_SUCCESS_TEXT}
    **Hasura Console**: [${env.protocol}://${env.domain}/](${env.protocol}://${env.domain}/)  
    **Hasura Admin Secret**: ${globals.HASURA_ADMIN_SECRET}  
    **Hasura Database Name**: ${globals.HASURA_DB_NAME}  
    **Hasura Database Username**: ${globals.HASURA_DB_USERNAME}  
    **Hasura Database Password**: ${globals.HASURA_DB_PASSWORD}  
    **Auth Admin Email**: ${globals.USER_EMAIL}  
    **Auth Admin Password**: ${globals.AUTH_ADMIN_PASSWORD}  
    **Auth Almighty API Key**: ${globals.AUTH_ALMIGHTY_API_KEY}  
    **Auth Serverless API Key**: ${globals.AUTH_SERVERLESS_API_KEY}  
    **Auth Database Name**: ${globals.AUTH_DB_NAME}  
    **Auth Database Username**: ${globals.AUTH_DB_USERNAME}  
    **Auth Database Password**: ${globals.AUTH_DB_PASSWORD}